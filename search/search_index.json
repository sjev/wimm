{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction What is WIMM WIMM is a text-based acconting tool. It joins the ranks of plain text accounting software, such as ledger and co. WIMM features : yaml file format support for invoice management import of bank statements tax (VAT or BTW in Dutch) Why WIMM There is a lot of accounting sofware out there, so why wimm ? Well, there are many great advantages of of plain text accounting , to name a few of them: data is human readable/editable plays nicely with version control systems new tools/scripts are easy to build However, I could not find a piece of software that would sufficiently automate my workflow, especially around invoce and tax management. So WIMM was born. Installation Wimm is currently in development phase. For this reason there is no pip package available. To install WIMM, clone the repository, then run pip install -r requirements.txt pip install -e . (this will install wimm in development mode) Documentation see WIMM documentation How it works WIMM works with a database stored in a folder. The folder location is specified with WIMM_PATH envirionment variable. Data files Overview of the data files: balance.yaml - account names that are included in balance calculations, including their starting values Assets: 0.0 Assets.Bank: 0.0 Ext: 0.0 transactions.yaml - operations for moving money from one account to another - amount: 1000.0 date: '2020-01-01' description: Customer paid invoice from: Ext.Bob to: Assets.bank - amount: 50.0 labels: office_supplies date: '2020-01-02' description: bought some pens from: Assets.bank to: Expenses invoices.yaml - overview of sent and received invoices. Note invoices have a predefined id that starts with INS or INR in a form INSYY_nnn (INS stands for 'INvoice Sent', INS for 'INvoice Received'). INS and INR prefixes will be recognized by wimm, resulting in suggestions for accounts and tax handling. - amount: 0 date: '2000-12-31' description: dummy invoice documents: invoices/INR.20_000_sample_invoice.pdf due_date: null id: INR.20_000 sender: Microsoft tax: 0 Data folders Files added to the database will be copied to corresponding folders. Invoices are stored in the invoices folder. A file location is added as documents field to corresponing data entry in invoices.yaml","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#what-is-wimm","text":"WIMM is a text-based acconting tool. It joins the ranks of plain text accounting software, such as ledger and co. WIMM features : yaml file format support for invoice management import of bank statements tax (VAT or BTW in Dutch)","title":"What is WIMM"},{"location":"#why-wimm","text":"There is a lot of accounting sofware out there, so why wimm ? Well, there are many great advantages of of plain text accounting , to name a few of them: data is human readable/editable plays nicely with version control systems new tools/scripts are easy to build However, I could not find a piece of software that would sufficiently automate my workflow, especially around invoce and tax management. So WIMM was born.","title":"Why WIMM"},{"location":"#installation","text":"Wimm is currently in development phase. For this reason there is no pip package available. To install WIMM, clone the repository, then run pip install -r requirements.txt pip install -e . (this will install wimm in development mode)","title":"Installation"},{"location":"#documentation","text":"see WIMM documentation","title":"Documentation"},{"location":"#how-it-works","text":"WIMM works with a database stored in a folder. The folder location is specified with WIMM_PATH envirionment variable.","title":"How it works"},{"location":"#data-files","text":"Overview of the data files: balance.yaml - account names that are included in balance calculations, including their starting values Assets: 0.0 Assets.Bank: 0.0 Ext: 0.0 transactions.yaml - operations for moving money from one account to another - amount: 1000.0 date: '2020-01-01' description: Customer paid invoice from: Ext.Bob to: Assets.bank - amount: 50.0 labels: office_supplies date: '2020-01-02' description: bought some pens from: Assets.bank to: Expenses invoices.yaml - overview of sent and received invoices. Note invoices have a predefined id that starts with INS or INR in a form INSYY_nnn (INS stands for 'INvoice Sent', INS for 'INvoice Received'). INS and INR prefixes will be recognized by wimm, resulting in suggestions for accounts and tax handling. - amount: 0 date: '2000-12-31' description: dummy invoice documents: invoices/INR.20_000_sample_invoice.pdf due_date: null id: INR.20_000 sender: Microsoft tax: 0","title":"Data files"},{"location":"#data-folders","text":"Files added to the database will be copied to corresponding folders. Invoices are stored in the invoices folder. A file location is added as documents field to corresponing data entry in invoices.yaml","title":"Data folders"},{"location":"quick_start/","text":"Quick start Set environment variable WIMM needs to know where its database is located. This path id defined in WIMM_PATH environment variable. Most convinient way to set the environment variable is to add a line to .bashrc file: export WIMM_PATH=/home/user/accounting But you can also just set the variable for current working dir like this: WIMM_PATH=\"$PWD\" You can check the configuration with wimm info : $ wimm info Data location: /home/jev/temp Hashed files: 0 Init database wimm init files will create the necessary files and folders. Displaying balance After initialisation you shold be able to view current balance: $ wimm show balance ----------Balance----------- Assets 0.0 Assets.Bank 0.0 Assets.bank 1100.0 Expenses 50.0 Ext.Bob -1000.0 INR.00_000 0.0 Liabilities -150.0 tax.to_pay 0.0 tax.to_receive 0.0 ---------------------------- SUM: 0.00 Note WIMM treats invoices as separate accounts. account value of 0 indicates that the corresponding invoice has been payed. Tip use --nozeros option to hide accounts with zero values use --depth option to collapse accounts to a desired level $ wimm show balance --nozeros --depth 1 ----------Balance----------- Assets 1100.00 Expenses 50.00 Ext -1000.00 INR -142.40 Liabilities -150.00 tax 24.71 ---------------------------- SUM: -117.69 Attention The account names on the balance are currently generated from transactions. This means that every account mentioned will appear on the balance. It would be better to show only the accounts defined in balance.yaml . This behavior is planned to be implemented later. Adding invoices Invoices can be added with wimm add invoce FILENAME . The invoice should be a pdf file. A dialog will be presented to guide you through the addition process. WIMM will also try to open the pdf file in system viewer. Note Multiple invoices can be added with a wildcard pattern *.pdf . Other patterns are also possible. Note Files added to the database are tracked by their md5 hashses. The hashes are stored in .wimm/hashes file. The files with hashes present in the database will be skipped . hashes file may be deleted and recreated with wimm init hash hash command","title":"Quick start"},{"location":"quick_start/#quick-start","text":"","title":"Quick start"},{"location":"quick_start/#set-environment-variable","text":"WIMM needs to know where its database is located. This path id defined in WIMM_PATH environment variable. Most convinient way to set the environment variable is to add a line to .bashrc file: export WIMM_PATH=/home/user/accounting But you can also just set the variable for current working dir like this: WIMM_PATH=\"$PWD\" You can check the configuration with wimm info : $ wimm info Data location: /home/jev/temp Hashed files: 0","title":"Set environment variable"},{"location":"quick_start/#init-database","text":"wimm init files will create the necessary files and folders.","title":"Init database"},{"location":"quick_start/#displaying-balance","text":"After initialisation you shold be able to view current balance: $ wimm show balance ----------Balance----------- Assets 0.0 Assets.Bank 0.0 Assets.bank 1100.0 Expenses 50.0 Ext.Bob -1000.0 INR.00_000 0.0 Liabilities -150.0 tax.to_pay 0.0 tax.to_receive 0.0 ---------------------------- SUM: 0.00 Note WIMM treats invoices as separate accounts. account value of 0 indicates that the corresponding invoice has been payed. Tip use --nozeros option to hide accounts with zero values use --depth option to collapse accounts to a desired level $ wimm show balance --nozeros --depth 1 ----------Balance----------- Assets 1100.00 Expenses 50.00 Ext -1000.00 INR -142.40 Liabilities -150.00 tax 24.71 ---------------------------- SUM: -117.69 Attention The account names on the balance are currently generated from transactions. This means that every account mentioned will appear on the balance. It would be better to show only the accounts defined in balance.yaml . This behavior is planned to be implemented later.","title":"Displaying balance"},{"location":"quick_start/#adding-invoices","text":"Invoices can be added with wimm add invoce FILENAME . The invoice should be a pdf file. A dialog will be presented to guide you through the addition process. WIMM will also try to open the pdf file in system viewer. Note Multiple invoices can be added with a wildcard pattern *.pdf . Other patterns are also possible. Note Files added to the database are tracked by their md5 hashses. The hashes are stored in .wimm/hashes file. The files with hashes present in the database will be skipped . hashes file may be deleted and recreated with wimm init hash hash command","title":"Adding invoices"}]}